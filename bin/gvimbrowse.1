.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "VIMBROWSE 1"
.TH VIMBROWSE 1 "2005-03-15" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
vimbrowse, gvimbrowse \- use vim as a web browser from the command line
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
\&\fBvimbrowse\fR \fB\-\-help\fR|\fB\-\-man\fR|\fB\-\-version\fR
.PP
\&\fBvimbrowse\fR [\fB\-\-gui\fR|\fB\-g\fR] [\fB\-\-(width|columns)=\fR\fInum\fR] 
[\fB\-\-(height|lines)=\fR\fInum\fR] [\fB\-\-remote={split,replace}\fR] [\fB\-\-vertical\fR] 
[\fIuri1\fR \fIuri2\fR ...]
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-\-gui\fR, \fB\-g\fR" 4
.IX Item "--gui, -g"
Run the gui vim (gvim) rather than the terminal based one. The same effect is 
acheived if the script name starts with \fBgvimbrowse\fR.
.IP "\fB\-\-width=\fR\fInum\fR" 4
.IX Item "--width=num"
.PD 0
.IP "\fB\-\-columns=\fR\fInum\fR" 4
.IX Item "--columns=num"
.PD
Set the number of columns to \fInum\fR.
.IP "\fB\-\-height=\fR\fInum\fR" 4
.IX Item "--height=num"
.PD 0
.IP "\fB\-\-lines=\fR\fInum\fR" 4
.IX Item "--lines=num"
.PD
Set the height of the window to \fInum\fR lines.
.IP "\fB\-\-remote={split,replace}\fR" 4
.IX Item "--remote={split,replace}"
Find an existing vim browser window and use it. If the value is \f(CW\*(C`split\*(C'\fR, a 
new browser window will be opened (in the existing vim window). Otherwise, 
the first argument will be opened in the existing window. In fact, only the 
first letter (\f(CW\*(C`s\*(C'\fR or \f(CW\*(C`r\*(C'\fR) is important, and is case insensitive. If the 
option is not given, or there is no open vim browser, a new gvim instance 
will be started.
.IP "\fB\-\-vertical\fR" 4
.IX Item "--vertical"
If the option is given, use vertical split instead of horizontal. This 
affects both the behaviour of \f(CW\*(C`\-\-remote=split\*(C'\fR, and when more than one 
argument is given.
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Give a short usage message and exit with status 0
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Give the full description and exit with status 1
.IP "\fB\-\-version\fR" 4
.IX Item "--version"
Print a line with the program name and exit with status 0
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
Each argument is used as a uri, using the same conventions as the first 
argument of the \fB:Browse\fR command of the browser plugin.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This script invokes \f(CWvim(1)\fR in a web browser mode. It requires the 
\&\fBbrowser\fR plugin, and vim compiled with \fI+clientserver\fR. If an argument is 
given, it will be opened as a uri, as described above. If several arguments 
are given,each uri will get its own (vim) window. If no argument is given and 
\&\fB\-\-remote\fR is specified, the only (possible) effect is changing the size of 
the existing vim browser window. If \fB\-\-remote\fR is not specified (or there is 
no existing window), opens a browser window as if the \fI:Browse\fR command was 
given with no arguments.
.PP
If the program name start with \fIgvimbrowse\fR, or the \fB\-g\fR or \fB\-\-gui\fR switch 
is given, opens the gui vim version (gvim). Otherwise, uses the terminal 
version.
.PP
Examples:
.PP
.Vb 9
\&    gvimbrowse        # open the home page in a new vim
\&    gvimbrowse --remote=split --vertical www.gnu.org
\&                        # open the gnu homepage in the same vim,
\&                        # in a new window split vertically
\&    gvimbrowse --remote=replace www.google.com vim.sf.net
\&                        # replace that page by google search, and
\&                        # add also the vim page, spliting horizontally
\&    gvimbrowse --remote=s --width=120
\&                        # change the width of the browser
.Ve
.SH "ENVIRONMENT"
.IX Header "ENVIRONMENT"
The only variable used explicitly in the script is
.IP "\fI$VIMBIN\fR" 4
.IX Item "$VIMBIN"
The vim binary. By default, \fIvim\fR is used.
.PP
Several other variable affect the plugin behaviour, though, as described in 
the help for the plugin.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fB\f(BIvim\fB\|(1)\fR, <http://vim.sf.net>
.PP
This script is part of the \fBbrowser\fR plugin for vim, 
<http://vim.sf.net/scripts/script.php?script_id=1053>. See
\&\f(CW\*(C`:help browser.vim\*(C'\fR for the documentation of the plugin.
.SH "AUTHOR"
.IX Header "AUTHOR"
Moshe Kaminsky <kaminsky@math.huji.ac.il> \- Copyright (c) 2004
